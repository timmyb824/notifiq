name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Test:
    environment:
      name: production
    runs-on: ubuntu-latest
    name: Build and Test
    # env:
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Code quality checks
        shell: bash
        run: |
          uv run black --check .

      - name: Run unit tests
        shell: bash
        run: |
          uv run pytest -xvvv tests/

      - name: Test run the tool
        if: success()
        shell: bash
        run: |
          export PYTHONPATH="${PYTHONPATH}:./src"
          uv run python src/main.py --version

  Release:
    needs: Test
    environment:
      name: production
      url: https://pypi.org/project/one-updater/
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Release
    concurrency: Release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Prepare package for release
        id: package_release
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          uv run semantic-release version
          uv run semantic-release changelog
          uv run semantic-release publish
